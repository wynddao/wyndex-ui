/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export interface AdminResponse {
  admin?: string | null
}
export type Uint128 = string
export interface AllStakedResponse {
  stakes: StakedResponse[]
  [k: string]: unknown
}
export interface StakedResponse {
  cw20_contract: string
  stake: Uint128
  total_locked: Uint128
  unbonding_period: number
  [k: string]: unknown
}
export type Decimal = string
export interface BondingInfoResponse {
  bonding: BondingPeriodInfo[]
  [k: string]: unknown
}
export interface BondingPeriodInfo {
  reward_multiplier: Decimal
  total_staked: Uint128
  unbonding_period: number
  voting_multiplier: Decimal
  [k: string]: unknown
}
export type Expiration =
  | {
      at_height: number
    }
  | {
      at_time: Timestamp
    }
  | {
      never: {}
    }
export type Timestamp = Uint64
export type Uint64 = string
export interface ClaimsResponse {
  claims: Claim[]
}
export interface TotalUnbondingResponse {
  total_unbonding: Uint128
  [k: string]: unknown
}

export interface Claim {
  amount: Uint128
  release_at: Expiration
}
export type Addr = string
export interface DelegatedResponse {
  delegated: Addr
  [k: string]: unknown
}
export interface DistributedRewardsResponse {
  distributed: Uint128
  withdrawable: Uint128
  [k: string]: unknown
}
export interface DistributionDataResponse {
  distributed_total: Uint128
  shares_leftover: number
  shares_per_point: Uint128
  withdrawable_total: Uint128
  [k: string]: unknown
}
export type ExecuteMsg =
  | {
      rebond: {
        bond_from: number
        bond_to: number
        tokens: Uint128
        [k: string]: unknown
      }
    }
  | {
      unbond: {
        tokens: Uint128
        unbonding_period: number
        [k: string]: unknown
      }
    }
  | {
      claim: {
        [k: string]: unknown
      }
    }
  | {
      update_admin: {
        admin?: string | null
        [k: string]: unknown
      }
    }
  | {
      add_hook: {
        addr: string
        [k: string]: unknown
      }
    }
  | {
      remove_hook: {
        addr: string
        [k: string]: unknown
      }
    }
  | {
      receive_delegation: Cw20ReceiveDelegationMsg
    }
  | {
      distribute_rewards: {
        sender?: string | null
        [k: string]: unknown
      }
    }
  | {
      withdraw_rewards: {
        owner?: string | null
        receiver?: string | null
        [k: string]: unknown
      }
    }
  | {
      delegate_withdrawal: {
        delegated: string
        [k: string]: unknown
      }
    }
export type Binary = string
export interface Cw20ReceiveDelegationMsg {
  amount: Uint128
  msg: Binary
  sender: string
  [k: string]: unknown
}
export interface HooksResponse {
  hooks: string[]
}
export interface InfoResponse {
  info: ContractVersion
  [k: string]: unknown
}
export interface ContractVersion {
  contract: string
  version: string
}
export interface InstantiateMsg {
  admin?: string | null
  cw20_contract: string
  min_bond: Uint128
  stake_config: StakeConfig[]
  tokens_per_power: Uint128
  [k: string]: unknown
}
export interface StakeConfig {
  reward_multiplier: Decimal
  unbonding_period: number
  voting_multiplier: Decimal
  [k: string]: unknown
}
export type QueryMsg =
  | {
      claims: {
        address: string
        [k: string]: unknown
      }
    }
  | {
      staked: {
        address: string
        unbonding_period: number
        [k: string]: unknown
      }
    }
  | {
      all_staked: {
        address: string
        [k: string]: unknown
      }
    }
  | {
      total_staked: {
        [k: string]: unknown
      }
    }
  | {
      total_unbonding: {
        [k: string]: unknown
      }
    }
  | {
      total_rewards: {
        [k: string]: unknown
      }
    }
  | {
      rewards: {
        address: string
        [k: string]: unknown
      }
    }
  | {
      admin: {
        [k: string]: unknown
      }
    }
  | {
      hooks: {
        [k: string]: unknown
      }
    }
  | {
      bonding_info: {
        [k: string]: unknown
      }
    }
  | {
      withdrawable_rewards: {
        owner: string
        [k: string]: unknown
      }
    }
  | {
      distributed_rewards: {
        [k: string]: unknown
      }
    }
  | {
      undistributed_rewards: {
        [k: string]: unknown
      }
    }
  | {
      delegated: {
        owner: string
        [k: string]: unknown
      }
    }
  | {
      distribution_data: {
        [k: string]: unknown
      }
    }
  | {
      withdraw_adjustment_data: {
        addr: string
        [k: string]: unknown
      }
    }
  | {
      voting_power_at_height: {
        address: string
        height?: number | null
        [k: string]: unknown
      }
    }
  | {
      total_power_at_height: {
        height?: number | null
        [k: string]: unknown
      }
    }
  | {
      info: {
        [k: string]: unknown
      }
    }
  | {
      token_contract: {
        [k: string]: unknown
      }
    }
export type ReceiveDelegationMsg = {
  delegate: {
    unbonding_period: number
    [k: string]: unknown
  }
}
export interface RewardsResponse {
  rewards: Uint128
  [k: string]: unknown
}
export type TokenContractResponse = Addr
export interface TotalPowerAtHeightResponse {
  height: number
  power: Uint128
  [k: string]: unknown
}
export interface TotalRewardsResponse {
  rewards: Uint128
  [k: string]: unknown
}
export interface TotalStakedResponse {
  total_staked: Uint128
  [k: string]: unknown
}
export interface UndistributedRewardsResponse {
  rewards: Uint128
  [k: string]: unknown
}
export interface VotingPowerAtHeightResponse {
  height: number
  power: Uint128
  [k: string]: unknown
}
export interface WithdrawAdjustmentDataResponse {
  delegated: Addr
  shares_correction: number
  withdrawn_rewards: Uint128
  [k: string]: unknown
}
export interface WithdrawableRewardsResponse {
  rewards: Uint128
  [k: string]: unknown
}
